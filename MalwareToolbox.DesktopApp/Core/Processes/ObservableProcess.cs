using System;
using System.Collections.Generic;
using CommunityToolkit.Mvvm.ComponentModel;
using MalwareToolbox.DesktopApp.Core.Utils;
using MalwareToolbox.LibraryC.ProcessAnalysis;

namespace MalwareToolbox.DesktopApp.Core.Processes;

public class ObservableProcess : ToolboxObservableRecipient, IProcess
{
    private uint _processId;
    private string _processName;
    private string _processPath;
    private string _description;

    private int _priority;
    
    private DateTime _creationTime;
    private DateTime _exitTime;
    private TimeSpan _userTime;
    private TimeSpan _kernelTime;
    
    private ulong _cycleTime;
    
    private uint _handlesCount;
    private uint _gdiHandles;
    private uint _userHandles;

    private uint _pageFaults;
    private ulong _peakWorkingSetSize;
    private ulong _workingSetSize;
    private ulong _quotaPeakPagedPoolUsage;
    private ulong _quotaPagedPoolUsage;
    private ulong _quotaPeakNonPagedPoolUsage;
    private ulong _quotaNonPagedPoolUsage;
    private ulong _pagefileUsage;
    private ulong _peakPagefileUsage;
    private ulong _privateUsage;

    private ulong _readOperationCount;
    private ulong _writeOperationCount;
    private ulong _otherOperationCount;
    private ulong _readTransferCount;
    private ulong _writeTransferCount;
    private ulong _otherTransferCount;

    private Dictionary<uint, IThread> _threads;

    public uint ProcessID
    {
        get => _processId;
        set => SetPropertyUIThread(ref _processId, value);
    }

    public string ProcessName
    {
        get => _processName;
        set => SetPropertyUIThread(ref _processName, value);
    }

    public string ProcessPath
    {
        get => _processPath;
        set => SetPropertyUIThread(ref _processPath, value);
    }

    public string Description
    {
        get => _description;
        set => SetPropertyUIThread(ref _description, value);
    }

    public int Priority
    {
        get => _priority;
        set => SetPropertyUIThread(ref _priority, value);
    }

    public DateTime CreationTime
    {
        get => _creationTime;
        set => SetPropertyUIThread(ref _creationTime, value);
    }

    public DateTime ExitTime
    {
        get => _exitTime;
        set => SetPropertyUIThread(ref _exitTime, value);
    }

    public TimeSpan KernelTime
    {
        get => _kernelTime;
        set => SetPropertyUIThread(ref _kernelTime, value);
    }

    public TimeSpan UserTime
    {
        get => _userTime;
        set => SetPropertyUIThread(ref _userTime, value);
    }

    public ulong CycleTime
    {
        get => _cycleTime;
        set => SetPropertyUIThread(ref _cycleTime, value);
    }

    public uint HandlesCount
    {
        get => _handlesCount;
        set => SetPropertyUIThread(ref _handlesCount, value);
    }

    public uint GDIHandles
    {
        get => _gdiHandles;
        set => SetPropertyUIThread(ref _gdiHandles, value);
    }

    public uint UserHandles
    {
        get => _userHandles;
        set => SetPropertyUIThread(ref _userHandles, value);
    }
    public uint PageFaultCount
    {
        get => _pageFaults;
        set => SetPropertyUIThread(ref _pageFaults, value);
    }

    public ulong PeakWorkingSetSize
    {
        get => _peakWorkingSetSize;
        set => SetPropertyUIThread(ref _peakWorkingSetSize, value);
    }

    public ulong WorkingSetSize
    {
        get => _workingSetSize;
        set => SetPropertyUIThread(ref _workingSetSize, value);
    }

    public ulong QuotaPeakPagedPoolUsage
    {
        get => _quotaPeakPagedPoolUsage;
        set => SetPropertyUIThread(ref _quotaPeakPagedPoolUsage, value);
    }

    public ulong QuotaPagedPoolUsage
    {
        get => _quotaPagedPoolUsage;
        set => SetPropertyUIThread(ref _quotaPagedPoolUsage, value);
    }

    public ulong QuotaPeakNonPagedPoolUsage
    {
        get => _quotaPeakNonPagedPoolUsage;
        set => SetPropertyUIThread(ref _quotaPeakNonPagedPoolUsage, value);
    }
    
    public ulong QuotaNonPagedPoolUsage
    {
        get => _quotaNonPagedPoolUsage;
        set => SetPropertyUIThread(ref _quotaNonPagedPoolUsage, value);
    }

    public ulong PagefileUsage
    {
        get => _pagefileUsage;
        set => SetPropertyUIThread(ref _pagefileUsage, value);
    }

    public ulong PeakPagefileUsage
    {
        get => _peakPagefileUsage;
        set => SetPropertyUIThread(ref _peakPagefileUsage, value);
    }

    public ulong PrivateUsage
    {
        get => _privateUsage;
        set => SetPropertyUIThread(ref _privateUsage, value);
    }

    public ulong ReadOperationCount
    {
        get => _readOperationCount;
        set => SetPropertyUIThread(ref _readOperationCount, value);
    }

    public ulong WriteOperationCount
    {
        get => _writeOperationCount;
        set => SetPropertyUIThread(ref _writeOperationCount, value);
    }

    public ulong OtherOperationCount
    {
        get => _otherOperationCount;
        set => SetPropertyUIThread(ref _otherOperationCount, value);
    }

    public ulong ReadTransferCount
    {
        get => _readTransferCount;
        set => SetPropertyUIThread(ref _readTransferCount, value);
    }

    public ulong WriteTransferCount
    {
        get => _writeTransferCount;
        set => SetPropertyUIThread(ref _writeTransferCount, value);
    }

    public ulong OtherTransferCount
    {
        get => _otherTransferCount;
        set => SetPropertyUIThread(ref _otherTransferCount, value);
    }

    public Dictionary<uint, IThread> Threads
    {
        get => _threads;
        set => SetPropertyUIThread(ref _threads, value);
    }

    public bool DoThreadsLoad { get; set; }
}
