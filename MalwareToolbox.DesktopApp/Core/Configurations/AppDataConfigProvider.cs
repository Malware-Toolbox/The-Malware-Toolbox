using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Text;
using System.Threading.Tasks;
using Windows.Storage;
using Newtonsoft.Json;

namespace MalwareToolbox.DesktopApp.Core.Configurations;

public class AppDataConfigProvider : IConfigProvider
{
    private readonly ApplicationDataContainer _roamingSettings = ApplicationData.Current.RoamingSettings;
    private readonly ApplicationDataContainer _localSettings = ApplicationData.Current.LocalSettings;

    public T GetConfig<T>(Config<T> config)
    {
        var applicationDataContainer = config.IsRoaming ? _roamingSettings : _localSettings;

        if (applicationDataContainer.Values.ContainsKey(config.Key))
        {
            return config.ConfigHandler.ToConfigData<T>(config, applicationDataContainer.Values[config.Key]);
        }

        SetConfig(config, config.DefaultValue);
        return config.DefaultValue;
    }

    public void SetConfig<T>(Config<T> config, T value)
    {
        object valueToSave = config.ConfigHandler.ToSettingsData(config, value);

        if (config.IsRoaming)
        {
            _roamingSettings.Values[config.Key] = valueToSave;
        }
        else
        {
            _localSettings.Values[config.Key] = valueToSave;
        }
    }

    public void ResetConfig<T>(Config<T> settingDefinition)
    {
        if (settingDefinition.IsRoaming)
        {
            _roamingSettings.Values.Remove(settingDefinition.Key);
        }
        else
        {
            _localSettings.Values.Remove(settingDefinition.Key);
        }
    }

    public void ResetAllConfig()
    {
        _roamingSettings.Values.Clear();
        _localSettings.Values.Clear();
    }
}
