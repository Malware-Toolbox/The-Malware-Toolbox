using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;

namespace MalwareToolbox.DesktopApp.Core.Configurations;

public class DefaultConfigHandler : IConfigHandler
{
    public T ToConfigData<T>(Config<T> config, object? value)
    {
        if (typeof(T).IsEnum)
        {
            return (T)Enum.Parse(typeof(T), value?.ToString() ?? string.Empty);
        }
        if (typeof(IList).IsAssignableFrom(typeof(T)))
        {
            return JsonConvert.DeserializeObject<T>(value?.ToString() ?? string.Empty)!;
        }
        
        return (T)Convert.ChangeType(value, typeof(T), CultureInfo.InvariantCulture);
    }

    public object ToSettingsData<T>(Config<T> config, T value)
    {
        if (value is Enum)
        {
            return value.ToString();
        }
        if (value is IList list)
        {
            return JsonConvert.SerializeObject(list, Formatting.None);
        }
        
        return value;
    }
}
