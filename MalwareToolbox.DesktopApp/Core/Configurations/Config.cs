using System;

namespace MalwareToolbox.DesktopApp.Core.Configurations;

public class Config<T>
{
    private static readonly IConfigHandler DefaultConfigHandler = new DefaultConfigHandler();

    public string Key { get; }

    public T DefaultValue { get; }

    public bool IsRoaming { get; } // TODO Implement this
    
    public IConfigHandler ConfigHandler { get; }

    public event EventHandler<ConfigChangedEventArgs<T>> ConfigChanged;

    public Config(string key, T defaultValue, bool isRoaming = false, IConfigHandler configHandler = null)
    {
        Key = key;
        DefaultValue = defaultValue;
        IsRoaming = isRoaming;
        ConfigHandler = configHandler ?? DefaultConfigHandler;
    }

    internal void InvokeEvent(T newValue)
    {
        ConfigChanged?.Invoke(this, new ConfigChangedEventArgs<T>(newValue));
    }
}
