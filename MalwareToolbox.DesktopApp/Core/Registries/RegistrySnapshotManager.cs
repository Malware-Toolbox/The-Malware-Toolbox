using System.Collections.Generic;
using System.Threading.Tasks;
using MalwareToolbox.LibraryC.RegShot;

namespace MalwareToolbox.DesktopApp.Core.Registries;

public class RegistrySnapshotManager
{
    private readonly RegShot _regshot;
    
    public List<RegistrySnapshot> Snapshots { get; }
    public ViewTarget Target { get; set; }

    public RegistrySnapshotManager()
    {
        _regshot = new RegShot();
        Snapshots = new List<RegistrySnapshot>();
    }

    public async Task<RegistrySnapshot> TakeSnapshotAsync(RegistryHiveType hiveType)
    {
        var snapshot = await Task.Run(() => _regshot.TakeSnapshot(hiveType));
        Snapshots.Insert(0, snapshot);
        return snapshot;
    }

    public async Task<List<RegistryKeyDiff>> CompareSnapshots(CompareTarget compareTarget)
    {
        return await CompareSnapshots(GetSnapshotByName(compareTarget.SnapshotName), GetSnapshotByName(compareTarget.OtherSnapshotName));
    }

    public async Task<List<RegistryKeyDiff>> CompareSnapshots(RegistrySnapshot snpashot1, RegistrySnapshot snpashot2)
    {
        return await Task.Run(() => _regshot.CompareSnapshots(snpashot1, snpashot2));
    }

    public RegistrySnapshot GetSnapshotByName(string name)
    {
        return Snapshots.Find(s => s.Name.Equals(name));
    }
}
