using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Windows.Storage;
using Windows.Storage.Pickers;
using MalwareToolbox.LibraryC.Utils;
using Microsoft.UI.Xaml;

namespace MalwareToolbox.DesktopApp.Core.WindowFiles;

public class WinFileManager
{
    public event EventHandler<WinFileOpenedEventArgs> WinFileOpened;
    public event EventHandler<WinFileClosingEventArgs> WinFileClosing;
    public event EventHandler<WinFileClosedEventArgs> WinFileClosed;

    public List<StorageFile> RecentFiles { get; private set; }
    public WinFile? WinFile { get; private set; }

    public WinFileManager()
    {
        LoadRecentFiles();
    }

    public async Task<bool> OpenFromFilePicker()
    {
        var openPicker = new FileOpenPicker { ViewMode = PickerViewMode.List };
        openPicker.FileTypeFilter.Add(".exe");
        openPicker.FileTypeFilter.Add(".dll");
        openPicker.FileTypeFilter.Add("*");

        var hwnd = WinRT.Interop.WindowNative.GetWindowHandle((Application.Current as App)?.MainWindow);
        WinRT.Interop.InitializeWithWindow.Initialize(openPicker, hwnd);

        var file = await openPicker.PickSingleFileAsync();
        if (file == null)
        {
            return false;
        }

        return OpenFile(file);
    }
    
    public bool OpenFile(StorageFile file)
    {
        return OpenFile(file.Path);
    }

    public bool OpenFile(string filePath)
    {
        if (WinFile != null && !CloseFile()) return false;

        WinFile = new WinFile(filePath);
        if (!WinFile.Load()) return false;

        WinFileOpened?.Invoke(this, new WinFileOpenedEventArgs(filePath, WinFile));
        return true;
    }

    public bool CloseFile()
    {
        if (WinFile == null) return true;

        WinFileClosing?.Invoke(this, new WinFileClosingEventArgs(WinFile.Path, WinFile));

        if (!WinFile.Unload()) return false;
        WinFile.Dispose();
        WinFile = null;

        WinFileClosed?.Invoke(this, new WinFileClosedEventArgs());
        return true;
    }

    public bool IsFileOpened()
    {
        return WinFile is { Loaded: true };
    }

    public async void LoadRecentFiles()
    {
        RecentFiles = new List<StorageFile>();
        RecentFiles.Add(await StorageFile.GetFileFromPathAsync(@"C:\Users\wben1\OneDrive - Ngee Ann Polytechnic\2022 school files\Capstone\pe\unpacked.exe"));
        RecentFiles.Add(await StorageFile.GetFileFromPathAsync(@"C:\Users\wben1\OneDrive - Ngee Ann Polytechnic\2022 school files\Capstone\pe\Lab01-02.exe"));
        RecentFiles.Add(await StorageFile.GetFileFromPathAsync(@"C:\Users\wben1\OneDrive - Ngee Ann Polytechnic\2022 school files\Capstone\pe\bintext.exe"));
    }
}
