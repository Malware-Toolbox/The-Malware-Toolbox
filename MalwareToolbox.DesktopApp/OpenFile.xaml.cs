using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.ApplicationModel.DataTransfer;
using Windows.Foundation;
using Windows.Foundation.Collections;
using Windows.Storage;
using Windows.Storage.Pickers;
using MalwareToolbox.DesktopApp.Core.WindowFiles;

// To learn more about WinUI, the WinUI project structure,
// and more about our project templates, see: http://aka.ms/winui-project-info.

namespace MalwareToolbox.DesktopApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class OpenFile : Page
    {
        private readonly WinFileManager _fileManager;

        public OpenFile()
        {
            this.InitializeComponent();
            _fileManager = (Application.Current as App)!.MainWindow.FileManager;
        }

        private void OpenFile_OnDragOver(object sender, DragEventArgs e)
        {
            e.AcceptedOperation = DataPackageOperation.Link;
            e.DragUIOverride.Caption = "Open";
        }

        private async void OpenFile_OnDrop(object sender, DragEventArgs e)
        {
            if (!e.DataView.Contains(StandardDataFormats.StorageItems))
            {
                //TODO Dialog invalid file
                return;
            }

            var items = await e.DataView.GetStorageItemsAsync();
            if (items.Count != 1)
            {
                //TODO Dialog only accept one file
                return;
            }

            StorageFile file = items[0] as StorageFile;
            if (file == null)
            {
                //TODO Dialog file not found
                return;
            }

            _fileManager.OpenFile(file);
        }

        private async void SelectFileButton_OnClick(object sender, RoutedEventArgs e)
        {
            var openPicker = new FileOpenPicker { ViewMode = PickerViewMode.List };
            openPicker.FileTypeFilter.Add(".exe");
            openPicker.FileTypeFilter.Add(".dll");

            var hwnd = WinRT.Interop.WindowNative.GetWindowHandle((Application.Current as App)!.MainWindow);
            WinRT.Interop.InitializeWithWindow.Initialize(openPicker, hwnd);

            var file = await openPicker.PickSingleFileAsync();
            if (file != null)
            {
                _fileManager.OpenFile(file);
            }
        }
    }
}
