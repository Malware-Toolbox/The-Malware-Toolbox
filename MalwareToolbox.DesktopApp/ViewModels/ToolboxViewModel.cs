using System.Collections.Generic;
using System.Runtime.CompilerServices;
using CommunityToolkit.Mvvm.ComponentModel;
using MalwareToolbox.DesktopApp.Core.Configurations;
using MalwareToolbox.DesktopApp.Core.WindowFiles;

namespace MalwareToolbox.DesktopApp.ViewModels;

public abstract class ToolboxViewModel : ObservableRecipient
{
    protected readonly ConfigProvider ConfigProvider;
    protected readonly WinFileManager FileManager;

    protected ToolboxViewModel()
    {
        ConfigProvider = App.Instance.ConfigProvider;
        FileManager = App.Instance.WinFileManager;
    }

    protected bool SetProperty<T>(Config<T> config, T value, [CallerMemberName] string propertyName = null)
    {
        // We duplicate the code here instead of calling the overload because we can't
        // guarantee that the invoked SetProperty<T> will be inlined, and we need the JIT
        // to be able to see the full EqualityComparer<T>.Default.Equals call, so that
        // it'll use the intrinsics version of it and just replace the whole invocation
        // with a direct comparison when possible (eg. for primitive numeric types).
        // This is the fastest SetProperty<T> overload so we particularly care about
        // the codegen quality here, and the code is small and simple enough so that
        // duplicating it still doesn't make the whole class harder to maintain.

        if (EqualityComparer<T>.Default.Equals(ConfigProvider.GetConfig(config), value))
        {
            return false;
        }
        
        OnPropertyChanging(propertyName);

        ConfigProvider.SetConfig(config, value);

        OnPropertyChanged(propertyName);

        return true;
    }
}
