using System;
using Windows.Storage;
using Windows.UI.Notifications;
using CommunityToolkit.WinUI.Notifications;

namespace MalwareToolbox.DesktopApp.UI.Notifications;

public class ExportNotification
{
    public static readonly string FileArgKey = "filepath";
    public static readonly string GroupName = "export";

    public static ExportNotification Create(StorageFile file)
    {
        return new ExportNotification(file);
    }

    public StorageFile File { get; }

    public string Id { get; }

    public ExportNotification(StorageFile file)
    {
        File = file;
        Id = Guid.NewGuid().ToString();
    }

    public void StartExport()
    {
        var content = new ToastContentBuilder()
            .AddText($"Exporting {File.Name}")
            .AddVisualChild(new AdaptiveProgressBar()
            {
                Value = AdaptiveProgressBarValue.Indeterminate,
                Status = "Exporting..."
            })
            .GetToastContent();

        var toast = new ToastNotification(content.GetXml()) { Tag = Id, Group = GroupName };
        ToastNotificationManagerCompat.CreateToastNotifier().Show(toast);
    }

    public void ExportComplete()
    {
        var content = new ToastContentBuilder()
            .AddText("Export completed!")
            .AddText(File.Name)
            .AddArgument(FileArgKey, File.Path)
            .GetToastContent();

        var toast = new ToastNotification(content.GetXml()) { Tag = Id, Group = GroupName };
        ToastNotificationManagerCompat.CreateToastNotifier().Show(toast);
    }
}
