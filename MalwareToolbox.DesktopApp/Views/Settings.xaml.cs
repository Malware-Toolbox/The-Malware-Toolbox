using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using MalwareToolbox.DesktopApp.Core.Configurations;
using Microsoft.UI.Xaml.Navigation;
using System.Linq;
using System;

// To learn more about WinUI, the WinUI project structure,
// and more about our project templates, see: http://aka.ms/winui-project-info.

namespace MalwareToolbox.DesktopApp.Views;

/// <summary>
/// An empty page that can be used on its own or navigated to within a Frame.
/// </summary>
public sealed partial class Settings : Page
{
    public Settings()
    {
        InitializeComponent();
    }

    private async void Reset_OnClick(object sender, RoutedEventArgs e)
    {

        ContentDialog dialog = new ContentDialog();

        // XamlRoot must be set in the case of a ContentDialog running in a Desktop app
        dialog.XamlRoot = XamlRoot;
        dialog.Style = Application.Current.Resources["DefaultContentDialogStyle"] as Style;
        dialog.Title = "Reset your configurations?";
        dialog.PrimaryButtonText = "Reset";
        dialog.CloseButtonText = "Cancel";
        dialog.DefaultButton = ContentDialogButton.Primary;
        dialog.Content = new ContentDialog();

        var result = await dialog.ShowAsync();

        if (result == ContentDialogResult.Primary)
        {
            ResetDialog.Text = "Configs reset.";
            App.Instance.ConfigProvider.ResetAllConfig();
        }
        else
        {

        }
    }

    private void OnThemeRadioButtonChecked(object sender, RoutedEventArgs e)
    {
        var selectedTheme = ((RadioButton)sender)?.Tag?.ToString();
        if (selectedTheme != null)
        {
            if (selectedTheme == "Dark")
            {
                App.Instance.ConfigProvider.SetConfig(Configs.ApplicationTheme, ElementTheme.Dark);
            }
            else if (selectedTheme == "Light")
            {
                App.Instance.ConfigProvider.SetConfig(Configs.ApplicationTheme, ElementTheme.Light);
            }
            else if (selectedTheme == "Default")
            {
                App.Instance.ConfigProvider.SetConfig(Configs.ApplicationTheme, ElementTheme.Default);
            }
        }
    }

    protected override void OnNavigatedTo(NavigationEventArgs e)
    {
        ElementTheme currentTheme = App.Instance.ConfigProvider.GetConfig(Configs.ApplicationTheme);
        ThemePanel.Children.Cast<RadioButton>().FirstOrDefault(c => c?.Tag?.ToString() == currentTheme.ToString()).IsChecked = true;
    }

}