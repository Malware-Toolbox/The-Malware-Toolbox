using MalwareToolbox.DesktopApp.UI;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Navigation;
using MalwareToolbox.DesktopApp.ViewModels.Tools;
using Microsoft.UI.Xaml;
using System.Collections.Generic;
using Windows.Storage.Pickers;
using MalwareToolbox.DesktopApp.UI.Notifications;
using System;
using MalwareToolbox.Library.ImportExports;

// To learn more about WinUI, the WinUI project structure,
// and more about our project templates, see: http://aka.ms/winui-project-info.

namespace MalwareToolbox.DesktopApp.Views.Tools;

/// <summary>
/// An empty page that can be used on its own or navigated to within a Frame.
/// </summary>
public sealed partial class FileInfo : Page, IPageRequireFile
{
    public FileInfoViewModel ViewModel { get; }
    private readonly ImportExportFactory<object> _factory;

    public FileInfo()
    {
        InitializeComponent();
        ViewModel = new FileInfoViewModel();
    }

    protected override void OnNavigatedTo(NavigationEventArgs e)
    {
        ViewModel.InitFileInfo();
    }

    private void ExpandAll_MenuFlyoutItem_Click(object sender, Microsoft.UI.Xaml.RoutedEventArgs e)
    {
        FilePropsExpander.IsExpanded = true;
        HashingExpander.IsExpanded = true;
        DosHeadersExpander.IsExpanded = true;
        NTFileHeadersExpander.IsExpanded = true;
        NTOptionalHeadersExpander.IsExpanded = true;
        SectionHeaders.IsExpanded = true;
        ImportTableExpander.IsExpanded = true;
        ImportedFunctionsExpander.IsExpanded = true;
    }

    private void CollapseAll_MenuFlyoutItem_Click(object sender, Microsoft.UI.Xaml.RoutedEventArgs e)
    {
        FilePropsExpander.IsExpanded = false;
        HashingExpander.IsExpanded = false;
        DosHeadersExpander.IsExpanded = false;
        NTFileHeadersExpander.IsExpanded = false;
        NTOptionalHeadersExpander.IsExpanded = false;
        SectionHeaders.IsExpanded = false;
        ImportTableExpander.IsExpanded = false;
        ImportedFunctionsExpander.IsExpanded = false;
    }
    //private async void ExportButton_OnClick(object sender, RoutedEventArgs e)
    //{
    //    var savePicker = new FileSavePicker();
    //    savePicker.FileTypeChoices.Add("Text File", new List<string>() { ".txt" });

    //    savePicker.SuggestedFileName = "File Info Export";

    //    var hwnd = WinRT.Interop.WindowNative.GetWindowHandle(App.Instance.WindowsManager.MainWindow);
    //    WinRT.Interop.InitializeWithWindow.Initialize(savePicker, hwnd);

    //    var file = await savePicker.PickSaveFileAsync();
    //    if (file != null)
    //    {
    //        var notification = new ExportNotification(file);
    //        notification.StartExport();

    //        Windows.Storage.CachedFileManager.DeferUpdates(file);
    //        await _factory.ExportAsync(file.Path, );

    //        notification.ExportComplete();
    //    }

    //}
}