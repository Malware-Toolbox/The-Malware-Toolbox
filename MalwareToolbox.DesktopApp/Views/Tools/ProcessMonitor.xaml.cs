using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Navigation;
using System;
using System.Threading.Tasks;
using Windows.Graphics;
using MalwareToolbox.DesktopApp.ViewModels.Tools;
using Microsoft.UI;
using Microsoft.UI.Windowing;

// To learn more about WinUI, the WinUI project structure,
// and more about our project templates, see: http://aka.ms/winui-project-info.

namespace MalwareToolbox.DesktopApp.Views.Tools;

/// <summary>
/// An empty page that can be used on its own or navigated to within a Frame.
/// </summary>
public sealed partial class ProcessMonitor : Page
{
    public ProcessMonitorViewModel ViewModel { get; }

    public ProcessMonitor()
    {
        InitializeComponent();
        ViewModel = new ProcessMonitorViewModel();
    }

    protected override void OnNavigatedTo(NavigationEventArgs e)
    {
        ViewModel.InitProcessLoop();
    }

    protected override void OnNavigatedFrom(NavigationEventArgs e)
    {
        ViewModel.StopProcessLoop();
    }

    private async void UIElement_OnDoubleTapped(object sender, DoubleTappedRoutedEventArgs e)
    {
        if (ViewModel.SelectedProcess == null) return;

        ProcessWindow processWindow = new ProcessWindow(ViewModel.SelectedProcess);
        App.Instance.ThemeHelper.SetTheme(processWindow);
        
        IntPtr hWnd = WinRT.Interop.WindowNative.GetWindowHandle(processWindow);
        WindowId windowId = Win32Interop.GetWindowIdFromWindow(hWnd);
        AppWindow appWindow = AppWindow.GetFromWindowId(windowId);
        appWindow.Resize(new SizeInt32(454, 600));

        await Task.Delay(50); // Needed to prevent new window from opening behind the main window
        processWindow.Activate();
    }
}
