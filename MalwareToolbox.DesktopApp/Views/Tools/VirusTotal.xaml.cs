using System;
using MalwareToolbox.DesktopApp.Core.Configurations;
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using MalwareToolbox.DesktopApp.ViewModels.Tools;
// To learn more about WinUI, the WinUI project structure,
// and more about our project templates, see: http://aka.ms/winui-project-info.

namespace MalwareToolbox.DesktopApp.Views.Tools;

/// <summary>
/// An empty page that can be used on its own or navigated to within a Frame.
/// </summary>


public sealed partial class VirusTotal : Page
{
    private readonly IConfigProvider _configProvider;
    public VirusTotalViewModel ViewModel { get; }

    public VirusTotal()
    {
         InitializeComponent();
        ViewModel = new VirusTotalViewModel();
        _configProvider = App.Instance.ConfigProvider;

        var apiKey = _configProvider.GetConfig(Configs.VirusTotalApiKey);
        if (!string.IsNullOrEmpty(apiKey))
        {
            APIText.Text = apiKey;
        }
    }
    
    private async void ShowDialog_Click(object sender, RoutedEventArgs e)
    {
        ContentDialog dialog = new ContentDialog();

        // XamlRoot must be set in the case of a ContentDialog running in a Desktop app
        dialog.XamlRoot = this.XamlRoot;
        dialog.Style = Application.Current.Resources["DefaultContentDialogStyle"] as Style;
        dialog.Title = "Save your API key?";
        dialog.PrimaryButtonText = "Save";
        dialog.SecondaryButtonText = "Don't Save";
        dialog.CloseButtonText = "Cancel";
        dialog.DefaultButton = ContentDialogButton.Primary;
        dialog.Content = new ContentDialog();

        var result = await dialog.ShowAsync();

        if (result == ContentDialogResult.Primary)
        {
            DialogResult.Text = "API key saved";
            _configProvider.SetConfig(Configs.VirusTotalApiKey, APIText.Text);
            OnClick();
        } 
        else if (result == ContentDialogResult.Secondary)
        {
            DialogResult.Text = "API key not saved";
            _configProvider.ResetConfig(Configs.VirusTotalApiKey);
            OnClick();
        }
        else
        {
            
        }
    }

    private async void OnClick()
    {
        FileProperties.IsEnabled = false;
        Names.IsEnabled = false;
        Sections.IsEnabled = false;
        Imports.IsEnabled = false;

        var hash = HashText.Text;
        var apiKey = APIText.Text;
        await ViewModel.LoadVirusTotalDetailsAsync(apiKey, hash);

        FileProperties.IsEnabled = true;
        Names.IsEnabled = true;
        Sections.IsEnabled = true;
        Imports.IsEnabled = true;
    }
}
