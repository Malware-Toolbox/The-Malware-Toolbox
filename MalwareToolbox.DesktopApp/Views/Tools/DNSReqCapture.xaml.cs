using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Threading;
using System.Threading.Tasks;
using MalwareToolbox.DesktopApp.Core.Utils;
using MalwareToolbox.DesktopApp.Core.WindowFiles;
using MalwareToolbox.DesktopApp.UI;
using MalwareToolbox.Library.DNSReqCapture;
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Navigation;

// To learn more about WinUI, the WinUI project structure,
// and more about our project templates, see: http://aka.ms/winui-project-info.

namespace MalwareToolbox.DesktopApp.Views.Tools;

/// <summary>
/// An empty page that can be used on its own or navigated to within a Frame.
/// </summary>
public sealed partial class DNSReqCapture : Page
{
    private readonly ThreadHelper _threadHelper;

    private bool _run;
    private Server server = new();

    public DNSReqCapture()
    {
        this.InitializeComponent();
        _threadHelper = App.Instance.ThreadHelper;
        server.Start();
    }
    async void OnClickStart(object sender, RoutedEventArgs ea)
    {
        StartButton.IsEnabled = false;
        StopButton.IsEnabled = true;
        if (_run) return;

        _run = true;
        SetDNS.SettingDNS("127.0.0.1");

        ObservableCollection<string> RequestsList = new ObservableCollection<string>();
        RequestsListText.ItemsSource = RequestsList;

        await Task.Run(() =>
        {
            try
            {
                while (_run)
                {
                    List<string> nameList = server.Recv();
                    _threadHelper.DispatcherQueue.TryEnqueue(() =>
                    {
                        RequestsList.Insert(0, String.Join(".", nameList));
                    });
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
                SetDNS.UnsetDNS();
            }
        });

        //TODO properly close server
        SetDNS.UnsetDNS();
    }
    void OnClickEnd(object sender, RoutedEventArgs ea)
    {
        StopButton.IsEnabled = false;
        StartButton.IsEnabled = true;
        _run = false;

        SetDNS.UnsetDNS();
    }
}
