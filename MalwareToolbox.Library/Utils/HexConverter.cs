using System.Runtime.InteropServices;

namespace MalwareToolbox.Library.Utils;

public class HexConverter
{
    private static readonly uint[] _lookup32 = CreateLookup32();

    private static uint[] CreateLookup32()
    {
        var result = new uint[256];
        for (int i = 0; i < 256; i++)
        {
            string s = i.ToString("X2");
            result[i] = ((uint)s[0]) + ((uint)s[1] << 16);
        }
        return result;
    }

    public static string ByteArrayToHex(byte[] bytes, char delimiter)
    {
        var lookup32 = _lookup32;
        var result = new char[bytes.Length * 3 - 1];
        for (int i = 0; i < bytes.Length; i++)
        {
            var val = lookup32[bytes[i]];
            result[2 * i] = (char)val;
            result[2 * i + 1] = (char)(val >> 16);
            result[2 * i + 2] = delimiter;
        }
        return new string(result);
    }

    public static string ByteArrayToString(byte[] ba)
    {
        return BitConverter.ToString(ba).Replace("-", ",");
    }
}
