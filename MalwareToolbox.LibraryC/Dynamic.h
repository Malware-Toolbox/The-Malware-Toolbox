#pragma once
#include "phnt_windows.h"
#include "Utils.h"

using namespace System;
using namespace Collections::Generic;

namespace MalwareToolbox {
	namespace LibraryC {
		namespace Dynamic
		{
			ref struct RegistryValuesDiff;
			ref struct RegistryKey;

			public ref struct RegistryKeyMeta
			{
				DWORD SubKeysCount;
				DWORD MaxSubKeyNameSize;
				DWORD MaxClassSize;
				DWORD ValuesCount;
				DWORD MaxValueNameSize;
				DWORD MaxValueDataSize;
				DWORD SecurityDescriptorSize;
			};

			template<class T> public ref struct RegistryValue
			{
				RegistryKey^ Key;
				String^ Name;
				DWORD Type;
				T Data;
			};

			public ref struct RegistryKey
			{
				RegistryKey^ ParentKey;
				String^ Name;
				String^ FullPath;
				RegistryKeyMeta^ Meta;
				Dictionary<String^, RegistryKey^>^ SubKeys;
				Dictionary<String^, RegistryValue<Object^>^>^ Values;
			};

			public ref struct RegistryKeysDiff
			{
				RegistryKeysDiff();

				List<RegistryKey^>^ RegistryKeyAdded;
				List<RegistryKey^>^ RegistryKeyRemoved;
				Dictionary<RegistryKey^, RegistryValuesDiff^>^ RegistryKeyModified;
			};

			public ref struct RegistryValuesDiff
			{
				RegistryValuesDiff();

				List<RegistryValue<Object^>^>^ RegistryValueAdded;
				List<RegistryValue<Object^>^>^ RegistryValueRemoved;
				List<Utils::Modified<RegistryValue<Object^>^>^>^ RegistryValueModified;
			};

			public ref class RegShot
			{
			public:
				RegistryKey^ TakeSnapshot();
				RegistryKeysDiff^ CompareSnapshots(RegistryKey^ first, RegistryKey^ second);
			};
		}
	}
}
