#pragma once
#include "phnt_windows.h"

using namespace System;

namespace MalwareToolbox {
	namespace LibraryC {
		namespace Utils
		{
			namespace Converters
			{
				LPSTR string_to_lpstr(String^ value);
				LPWSTR string_to_lpwstr(String^ value);

				unsigned char* bytearray_to_char(array<Byte>^ value);

				DWORD uchar_to_int32(unsigned char* value);
				DWORD uchar_to_int32_bigendian(unsigned char* value);
				DWORD64 uchar_to_int64(unsigned char* value);
				DWORD64 uchar_to_int64_bigendian(unsigned char* value);

				String^ uchar_to_string(unsigned char* value);
				String^ uchar_to_string(unsigned char* value, int length);
				String^ uchar_to_string_w(unsigned char* value);
				String^ uchar_to_string_w(unsigned char* value, int length);
				array<Byte>^ uchar_to_bytearray(unsigned char* value, DWORD64 size);
			};

			public ref class File
			{
			public:
				File(String^ filePath);
				~File();
				virtual bool Load();
				virtual bool Unload();

				String^ GetPath();
				DWORD GetSize();
				BYTE GetByte(DWORD64 offset);
				unsigned char* GetData();
				bool IsLoaded();

			protected:
				String^ m_file_path;
				HANDLE m_file;
				DWORD m_file_size;
				LPVOID m_file_data;
				bool m_loaded;
			};
		}
	}
}
