#pragma once
#include "Utils.h"

using namespace Collections::Generic;
using namespace Text::RegularExpressions;

namespace MalwareToolbox {
	namespace LibraryC {
		namespace Strings
		{
			public delegate String^ StringCategoryMatcher(String^ str);

			public ref class StringCategoriser
			{
			public:
				StringCategoriser();

				void AddDefaultMatches();
				void AddExactMatch(String^ categoryName, String^ matchString);
				void AddRegexMatch(String^ categoryName, String^ matchRegex);
				void AddCustomMatch(StringCategoryMatcher^ customMatcher);
				Dictionary<String^, List<String^>^>^ CategoriseStrings(List<String^>^ strings);
				String^ GetCategory(String^ str);

			private:
				Dictionary<String^, String^>^ m_exact_match_map;
				List<Tuple<String^, Regex^>^>^ m_regex_match_list;
				List<StringCategoryMatcher^>^ m_custom_match_list;
			};

			public ref class StringAnalyser
			{
			public:
				StringAnalyser(Utils::File^ file);

				List<String^>^ GenerateStrings(int minLength, int maxLength);

			private:
				Utils::File^ m_file;
			};
		}
	}
}
