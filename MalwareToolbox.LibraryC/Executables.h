#pragma once
#include "Utils.h"

using namespace System;
using namespace Collections::Generic;

namespace MalwareToolbox {
	namespace LibraryC {
		namespace Executables
		{
			public ref struct DosHeader
			{
				DWORD	Magic;
				LONG	Lfanew;
			};

			public ref struct NtHeader32
			{
				DWORD	Signature;

				// File headers
				WORD    Machine;
				WORD    NumberOfSections;
				DWORD   TimeDateStamp;
				DWORD   PointerToSymbolTable;
				DWORD   NumberOfSymbols;
				WORD    SizeOfOptionalHeader;
				WORD    Characteristics;

				// Standard fields
				WORD    Magic;
				BYTE    MajorLinkerVersion;
				BYTE    MinorLinkerVersion;
				DWORD   SizeOfCode;
				DWORD   SizeOfInitializedData;
				DWORD   SizeOfUninitializedData;
				DWORD   AddressOfEntryPoint;
				DWORD   BaseOfCode;
				DWORD   BaseOfData;

				// NT additional fields
				DWORD   ImageBase;
				DWORD   SectionAlignment;
				DWORD   FileAlignment;
				WORD    MajorOperatingSystemVersion;
				WORD    MinorOperatingSystemVersion;
				WORD    MajorImageVersion;
				WORD    MinorImageVersion;
				WORD    MajorSubsystemVersion;
				WORD    MinorSubsystemVersion;
				DWORD   Win32VersionValue;
				DWORD   SizeOfImage;
				DWORD   SizeOfHeaders;
				DWORD   CheckSum;
				WORD    Subsystem;
				WORD    DllCharacteristics;
				DWORD   SizeOfStackReserve;
				DWORD   SizeOfStackCommit;
				DWORD   SizeOfHeapReserve;
				DWORD   SizeOfHeapCommit;
				DWORD   LoaderFlags;
				DWORD   NumberOfRvaAndSizes;
			};

			public ref struct NtHeader64
			{
			};

			public ref struct SectionHeader
			{
				String^ Name;
				DWORD   PhysicalAddress;
				DWORD   VirtualSize;
				DWORD   VirtualAddress;
				DWORD   SizeOfRawData;
				DWORD   PointerToRawData;
				DWORD   PointerToRelocations;
				DWORD   PointerToLinenumbers;
				WORD    NumberOfRelocations;
				WORD    NumberOfLinenumbers;
				DWORD   Characteristics;
			};

			public ref struct DataDirectory
			{
				DWORD   VirtualAddress;
				DWORD   Size;
			};

			public ref class PE : public Utils::File
			{
			public:
				static List<String^>^ KnownDlls(); //TODO Move this

				PE(String^ filePath);
				~PE();

				bool Load() override;
				void LoadHeaders();
				void PrintProps();

				property DosHeader^ DosHeaders { DosHeader^ get(); }
				property NtHeader32^ NtHeaders { NtHeader32^ get(); }
				property array<SectionHeader^>^ SectionHeaders { array<SectionHeader^>^ get(); }
				
			private:
				DosHeader^ m_dos_headers;
				NtHeader32^ m_nt_headers;
				array<SectionHeader^>^ m_section_headers;
			};
		}
	}
}
