#include "pch.h"

#include <iostream>

#include "Dynamic.h"

#include <phnt_windows.h>

using namespace MalwareToolbox::LibraryC::Dynamic;

void RegShot::TakeSnapshot()
{
	HKEY key = nullptr;
	DWORD result = NULL;
    const LPCWSTR sub_key = L"Software\\Microsoft\\Windows\\CurrentVersion\\Run";

    result = RegOpenKeyEx(
        HKEY_CURRENT_USER,
        sub_key,
        0,
        KEY_READ,
        &key
    );
    if (result != ERROR_SUCCESS)
	{
        std::cout << "Error opening key" << std::endl;
		return;
	}
	
    DWORD index = 0;

	while (true)
    {
        WCHAR name[16383];
        DWORD name_size = 16383;
        DWORD type = NULL;
        BYTE data[100000];
        DWORD data_size = 100000;

        std::cout << index << std::endl;
        result = RegEnumValue(key, index++, name, &name_size, NULL, &type, data, &data_size);
        std::cout << result << std::endl;
        if (result != ERROR_SUCCESS)
		{

			break;
		}
	    std::wcout << name << std::endl;
        std::cout << name_size << std::endl;
        for (int c = 0; c < data_size; c++)
        {
	        std::cout << data[c];
        }
        std::cout << std::endl;
		std::cout << data_size << std::endl;
        std::cout << std::endl;
        std::cout << std::endl;
    }
}
